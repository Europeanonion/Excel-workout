  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (74 ms)
    ✓ shows loading state while processing (114 ms)
    ✓ handles invalid file type and calls onUploadError (8 ms)
    ✓ handles parsing errors and calls onUploadError (8 ms)
    ✓ handles invalid file type and displays inline error (32 ms)
    ✓ handles parsing errors and displays inline error (12 ms)
    ✓ clears the input after successful upload (6 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        1.627 s, estimated 4 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (161 ms)
    ✓ shows loading state while processing (145 ms)
    ✓ handles invalid file type and calls onUploadError (36 ms)
    ✓ handles parsing errors and calls onUploadError (75 ms)
    ✓ handles invalid file type and displays inline error (183 ms)
    ✓ handles parsing errors and displays inline error (31 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.599 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (184 ms)
    ✓ shows loading state while processing (131 ms)
    ✓ handles invalid file type and calls onUploadError (13 ms)
    ✓ handles parsing errors and calls onUploadError (18 ms)
    ✓ handles invalid file type and displays inline error (111 ms)
    ✓ handles parsing errors and displays inline error (52 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.833 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (127 ms)
    ✓ shows loading state while processing (121 ms)
    ✓ handles invalid file type and calls onUploadError (13 ms)
    ✓ handles parsing errors and calls onUploadError (38 ms)
    ✓ handles invalid file type and displays inline error (136 ms)
    ✓ handles parsing errors and displays inline error (62 ms)
    ✓ clears the input after successful upload (14 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.273 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (113 ms)
    ✓ shows loading state while processing (129 ms)
    ✓ handles invalid file type and calls onUploadError (33 ms)
    ✓ handles parsing errors and calls onUploadError (54 ms)
    ✓ handles invalid file type and displays inline error (172 ms)
    ✓ handles parsing errors and displays inline error (64 ms)
    ✓ clears the input after successful upload (8 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.181 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (338 ms)
    ✓ shows loading state while processing (124 ms)
    ✓ handles invalid file type and calls onUploadError (26 ms)
    ✓ handles parsing errors and calls onUploadError (21 ms)
    ✓ handles invalid file type and displays inline error (171 ms)
    ✓ handles parsing errors and displays inline error (43 ms)
    ✓ clears the input after successful upload (22 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.677 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (316 ms)
    ✓ shows loading state while processing (147 ms)
    ✓ handles invalid file type and calls onUploadError (28 ms)
    ✓ handles parsing errors and calls onUploadError (39 ms)
    ✓ handles invalid file type and displays inline error (76 ms)
    ✓ handles parsing errors and displays inline error (16 ms)
    ✓ clears the input after successful upload (8 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.543 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (180 ms)
    ✓ shows loading state while processing (124 ms)
    ✓ handles invalid file type and calls onUploadError (25 ms)
    ✓ handles parsing errors and calls onUploadError (15 ms)
    ✓ handles invalid file type and displays inline error (37 ms)
    ✓ handles parsing errors and displays inline error (18 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.322 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (184 ms)
    ✓ shows loading state while processing (124 ms)
    ✓ handles invalid file type and calls onUploadError (8 ms)
    ✓ handles parsing errors and calls onUploadError (9 ms)
    ✓ handles invalid file type and displays inline error (49 ms)
    ✓ handles parsing errors and displays inline error (18 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.018 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (291 ms)
    ✓ shows loading state while processing (134 ms)
    ✓ handles invalid file type and calls onUploadError (18 ms)
    ✓ handles parsing errors and calls onUploadError (17 ms)
    ✓ handles invalid file type and displays inline error (159 ms)
    ✓ handles parsing errors and displays inline error (59 ms)
    ✓ clears the input after successful upload (21 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.346 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (218 ms)
    ✓ shows loading state while processing (205 ms)
    ✓ handles invalid file type and calls onUploadError (26 ms)
    ✓ handles parsing errors and calls onUploadError (18 ms)
    ✓ handles invalid file type and displays inline error (119 ms)
    ✓ handles parsing errors and displays inline error (31 ms)
    ✓ clears the input after successful upload (17 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.805 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (273 ms)
    ✓ shows loading state while processing (131 ms)
    ✓ handles invalid file type and calls onUploadError (26 ms)
    ✓ handles parsing errors and calls onUploadError (79 ms)
    ✓ handles invalid file type and displays inline error (96 ms)
    ✓ handles parsing errors and displays inline error (55 ms)
    ✓ clears the input after successful upload (21 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.084 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (270 ms)
    ✓ shows loading state while processing (145 ms)
    ✓ handles invalid file type and calls onUploadError (25 ms)
    ✓ handles parsing errors and calls onUploadError (58 ms)
    ✓ handles invalid file type and displays inline error (104 ms)
    ✓ handles parsing errors and displays inline error (59 ms)
    ✓ clears the input after successful upload (25 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.666 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (141 ms)
    ✓ shows loading state while processing (119 ms)
    ✓ handles invalid file type and calls onUploadError (16 ms)
    ✓ handles parsing errors and calls onUploadError (12 ms)
    ✓ handles invalid file type and displays inline error (73 ms)
    ✓ handles parsing errors and displays inline error (25 ms)
    ✓ clears the input after successful upload (8 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        3.333 s, estimated 4 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (275 ms)
    ✓ shows loading state while processing (147 ms)
    ✓ handles invalid file type and calls onUploadError (14 ms)
    ✓ handles parsing errors and calls onUploadError (34 ms)
    ✓ handles invalid file type and displays inline error (133 ms)
    ✓ handles parsing errors and displays inline error (45 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.409 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (165 ms)
    ✓ shows loading state while processing (132 ms)
    ✓ handles invalid file type and calls onUploadError (9 ms)
    ✓ handles parsing errors and calls onUploadError (8 ms)
    ✓ handles invalid file type and displays inline error (58 ms)
    ✓ handles parsing errors and displays inline error (19 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.913 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (241 ms)
    ✓ shows loading state while processing (138 ms)
    ✓ handles invalid file type and calls onUploadError (51 ms)
    ✓ handles parsing errors and calls onUploadError (15 ms)
    ✓ handles invalid file type and displays inline error (60 ms)
    ✓ handles parsing errors and displays inline error (26 ms)
    ✓ clears the input after successful upload (11 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.075 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (265 ms)
    ✓ shows loading state while processing (140 ms)
    ✓ handles invalid file type and calls onUploadError (24 ms)
    ✓ handles parsing errors and calls onUploadError (25 ms)
    ✓ handles invalid file type and displays inline error (73 ms)
    ✓ handles parsing errors and displays inline error (22 ms)
    ✓ clears the input after successful upload (6 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.905 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (259 ms)
    ✓ shows loading state while processing (152 ms)
    ✓ handles invalid file type and calls onUploadError (28 ms)
    ✓ handles parsing errors and calls onUploadError (24 ms)
    ✓ handles invalid file type and displays inline error (148 ms)
    ✓ handles parsing errors and displays inline error (21 ms)
    ✓ clears the input after successful upload (13 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.467 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (152 ms)
    ✓ shows loading state while processing (122 ms)
    ✓ handles invalid file type and calls onUploadError (12 ms)
    ✓ handles parsing errors and calls onUploadError (18 ms)
    ✓ handles invalid file type and displays inline error (112 ms)
    ✓ handles parsing errors and displays inline error (16 ms)
    ✓ clears the input after successful upload (5 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.959 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (286 ms)
    ✓ shows loading state while processing (124 ms)
    ✓ handles invalid file type and calls onUploadError (35 ms)
    ✓ handles parsing errors and calls onUploadError (57 ms)
    ✓ handles invalid file type and displays inline error (61 ms)
    ✓ handles parsing errors and displays inline error (21 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.404 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (149 ms)
    ✓ shows loading state while processing (122 ms)
    ✓ handles invalid file type and calls onUploadError (15 ms)
    ✓ handles parsing errors and calls onUploadError (12 ms)
    ✓ handles invalid file type and displays inline error (68 ms)
    ✓ handles parsing errors and displays inline error (23 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.703 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (189 ms)
    ✓ shows loading state while processing (132 ms)
    ✓ handles invalid file type and calls onUploadError (17 ms)
    ✓ handles parsing errors and calls onUploadError (23 ms)
    ✓ handles invalid file type and displays inline error (201 ms)
    ✓ handles parsing errors and displays inline error (48 ms)
    ✓ clears the input after successful upload (11 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        3.813 s, estimated 4 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (182 ms)
    ✓ shows loading state while processing (140 ms)
    ✓ handles invalid file type and calls onUploadError (20 ms)
    ✓ handles parsing errors and calls onUploadError (19 ms)
    ✓ handles invalid file type and displays inline error (71 ms)
    ✓ handles parsing errors and displays inline error (30 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        6.203 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (393 ms)
    ✓ shows loading state while processing (150 ms)
    ✓ handles invalid file type and calls onUploadError (15 ms)
    ✓ handles parsing errors and calls onUploadError (17 ms)
    ✓ handles invalid file type and displays inline error (48 ms)
    ✓ handles parsing errors and displays inline error (18 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.182 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (187 ms)
    ✓ shows loading state while processing (122 ms)
    ✓ handles invalid file type and calls onUploadError (36 ms)
    ✓ handles parsing errors and calls onUploadError (32 ms)
    ✓ handles invalid file type and displays inline error (167 ms)
    ✓ handles parsing errors and displays inline error (35 ms)
    ✓ clears the input after successful upload (32 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.279 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (250 ms)
    ✓ shows loading state while processing (135 ms)
    ✓ handles invalid file type and calls onUploadError (48 ms)
    ✓ handles parsing errors and calls onUploadError (15 ms)
    ✓ handles invalid file type and displays inline error (132 ms)
    ✓ handles parsing errors and displays inline error (55 ms)
    ✓ clears the input after successful upload (40 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.439 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (175 ms)
    ✓ shows loading state while processing (133 ms)
    ✓ handles invalid file type and calls onUploadError (18 ms)
    ✓ handles parsing errors and calls onUploadError (14 ms)
    ✓ handles invalid file type and displays inline error (86 ms)
    ✓ handles parsing errors and displays inline error (26 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.413 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

er.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (155 ms)
    ✓ shows loading state while processing (123 ms)
    ✓ handles invalid file type and calls onUploadError (10 ms)
    ✓ handles parsing errors and calls onUploadError (10 ms)
    ✓ handles invalid file type and displays inline error (63 ms)
    ✓ handles parsing errors and displays inline error (16 ms)
    ✓ clears the input after successful upload (11 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.216 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (178 ms)
    ✓ shows loading state while processing (122 ms)
    ✓ handles invalid file type and calls onUploadError (24 ms)
    ✓ handles parsing errors and calls onUploadError (25 ms)
    ✓ handles invalid file type and displays inline error (87 ms)
    ✓ handles parsing errors and displays inline error (37 ms)
    ✓ clears the input after successful upload (24 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.404 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

xt('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (138 ms)
    ✓ shows loading state while processing (155 ms)
    ✓ handles invalid file type and calls onUploadError (41 ms)
    ✓ handles parsing errors and calls onUploadError (38 ms)
    ✓ handles invalid file type and displays inline error (185 ms)
    ✓ handles parsing errors and displays inline error (42 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.335 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (132 ms)
    ✓ shows loading state while processing (127 ms)
    ✓ handles invalid file type and calls onUploadError (16 ms)
    ✓ handles parsing errors and calls onUploadError (18 ms)
    ✓ handles invalid file type and displays inline error (52 ms)
    ✓ handles parsing errors and displays inline error (18 ms)
    ✓ clears the input after successful upload (6 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.093 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (279 ms)
    ✓ shows loading state while processing (154 ms)
    ✓ handles invalid file type and calls onUploadError (26 ms)
    ✓ handles parsing errors and calls onUploadError (43 ms)
    ✓ handles invalid file type and displays inline error (77 ms)
    ✓ handles parsing errors and displays inline error (21 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.209 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

ct.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (258 ms)
    ✓ shows loading state while processing (139 ms)
    ✓ handles invalid file type and calls onUploadError (51 ms)
    ✓ handles parsing errors and calls onUploadError (20 ms)
    ✓ handles invalid file type and displays inline error (105 ms)
    ✓ handles parsing errors and displays inline error (55 ms)
    ✓ clears the input after successful upload (67 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.004 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (94 ms)
    ✓ shows loading state while processing (128 ms)
    ✓ handles invalid file type and calls onUploadError (10 ms)
    ✓ handles parsing errors and calls onUploadError (11 ms)
    ✓ handles invalid file type and displays inline error (48 ms)
    ✓ handles parsing errors and displays inline error (20 ms)
    ✓ clears the input after successful upload (21 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        2.823 s, estimated 3 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (286 ms)
    ✓ shows loading state while processing (142 ms)
    ✓ handles invalid file type and calls onUploadError (38 ms)
    ✓ handles parsing errors and calls onUploadError (51 ms)
    ✓ handles invalid file type and displays inline error (110 ms)
    ✓ handles parsing errors and displays inline error (40 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.916 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (196 ms)
    ✓ shows loading state while processing (126 ms)
    ✓ handles invalid file type and calls onUploadError (15 ms)
    ✓ handles parsing errors and calls onUploadError (11 ms)
    ✓ handles invalid file type and displays inline error (47 ms)
    ✓ handles parsing errors and displays inline error (19 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.066 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (158 ms)
    ✓ shows loading state while processing (138 ms)
    ✓ handles invalid file type and calls onUploadError (28 ms)
    ✓ handles parsing errors and calls onUploadError (26 ms)
    ✓ handles invalid file type and displays inline error (110 ms)
    ✓ handles parsing errors and displays inline error (33 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.744 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (133 ms)
    ✓ shows loading state while processing (130 ms)
    ✓ handles invalid file type and calls onUploadError (10 ms)
    ✓ handles parsing errors and calls onUploadError (10 ms)
    ✓ handles invalid file type and displays inline error (31 ms)
    ✓ handles parsing errors and displays inline error (13 ms)
    ✓ clears the input after successful upload (5 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.266 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (227 ms)
    ✓ shows loading state while processing (122 ms)
    ✓ handles invalid file type and calls onUploadError (55 ms)
    ✓ handles parsing errors and calls onUploadError (35 ms)
    ✓ handles invalid file type and displays inline error (124 ms)
    ✓ handles parsing errors and displays inline error (51 ms)
    ✓ clears the input after successful upload (28 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.32 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (118 ms)
    ✓ shows loading state while processing (121 ms)
    ✓ handles invalid file type and calls onUploadError (12 ms)
    ✓ handles parsing errors and calls onUploadError (12 ms)
    ✓ handles invalid file type and displays inline error (70 ms)
    ✓ handles parsing errors and displays inline error (29 ms)
    ✓ clears the input after successful upload (7 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.256 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (110 ms)
    ✓ shows loading state while processing (121 ms)
    ✓ handles invalid file type and calls onUploadError (21 ms)
    ✓ handles parsing errors and calls onUploadError (27 ms)
    ✓ handles invalid file type and displays inline error (87 ms)
    ✓ handles parsing errors and displays inline error (26 ms)
    ✓ clears the input after successful upload (12 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.339 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

nts/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (118 ms)
    ✓ shows loading state while processing (123 ms)
    ✓ handles invalid file type and calls onUploadError (30 ms)
    ✓ handles parsing errors and calls onUploadError (33 ms)
    ✓ handles invalid file type and displays inline error (154 ms)
    ✓ handles parsing errors and displays inline error (32 ms)
    ✓ clears the input after successful upload (11 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        3.407 s, estimated 4 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (173 ms)
    ✓ shows loading state while processing (123 ms)
    ✓ handles invalid file type and calls onUploadError (11 ms)
    ✓ handles parsing errors and calls onUploadError (17 ms)
    ✓ handles invalid file type and displays inline error (71 ms)
    ✓ handles parsing errors and displays inline error (18 ms)
    ✓ clears the input after successful upload (12 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.686 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (233 ms)
    ✓ shows loading state while processing (138 ms)
    ✓ handles invalid file type and calls onUploadError (33 ms)
    ✓ handles parsing errors and calls onUploadError (11 ms)
    ✓ handles invalid file type and displays inline error (152 ms)
    ✓ handles parsing errors and displays inline error (49 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        3.963 s, estimated 4 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (357 ms)
    ✓ shows loading state while processing (137 ms)
    ✓ handles invalid file type and calls onUploadError (61 ms)
    ✓ handles parsing errors and calls onUploadError (21 ms)
    ✓ handles invalid file type and displays inline error (91 ms)
    ✓ handles parsing errors and displays inline error (24 ms)
    ✓ clears the input after successful upload (11 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.932 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (122 ms)
    ✓ shows loading state while processing (127 ms)
    ✓ handles invalid file type and calls onUploadError (10 ms)
    ✓ handles parsing errors and calls onUploadError (9 ms)
    ✓ handles invalid file type and displays inline error (33 ms)
    ✓ handles parsing errors and displays inline error (15 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.125 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (123 ms)
    ✓ shows loading state while processing (124 ms)
    ✓ handles invalid file type and calls onUploadError (8 ms)
    ✓ handles parsing errors and calls onUploadError (8 ms)
    ✓ handles invalid file type and displays inline error (51 ms)
    ✓ handles parsing errors and displays inline error (29 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.997 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (257 ms)
    ✓ shows loading state while processing (168 ms)
    ✓ handles invalid file type and calls onUploadError (31 ms)
    ✓ handles parsing errors and calls onUploadError (31 ms)
    ✓ handles invalid file type and displays inline error (216 ms)
    ✓ handles parsing errors and displays inline error (54 ms)
    ✓ clears the input after successful upload (32 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.608 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (220 ms)
    ✓ shows loading state while processing (143 ms)
    ✓ handles invalid file type and calls onUploadError (38 ms)
    ✓ handles parsing errors and calls onUploadError (53 ms)
    ✓ handles invalid file type and displays inline error (336 ms)
    ✓ handles parsing errors and displays inline error (43 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.149 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (177 ms)
    ✓ shows loading state while processing (131 ms)
    ✓ handles invalid file type and calls onUploadError (38 ms)
    ✓ handles parsing errors and calls onUploadError (26 ms)
    ✓ handles invalid file type and displays inline error (101 ms)
    ✓ handles parsing errors and displays inline error (23 ms)
    ✓ clears the input after successful upload (15 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.887 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (97 ms)
    ✓ shows loading state while processing (119 ms)
    ✓ handles invalid file type and calls onUploadError (13 ms)
    ✓ handles parsing errors and calls onUploadError (11 ms)
    ✓ handles invalid file type and displays inline error (48 ms)
    ✓ handles parsing errors and displays inline error (14 ms)
    ✓ clears the input after successful upload (6 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.178 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (137 ms)
    ✓ shows loading state while processing (124 ms)
    ✓ handles invalid file type and calls onUploadError (8 ms)
    ✓ handles parsing errors and calls onUploadError (9 ms)
    ✓ handles invalid file type and displays inline error (60 ms)
    ✓ handles parsing errors and displays inline error (25 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        6.453 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (162 ms)
    ✓ shows loading state while processing (160 ms)
    ✓ handles invalid file type and calls onUploadError (46 ms)
    ✓ handles parsing errors and calls onUploadError (19 ms)
    ✓ handles invalid file type and displays inline error (106 ms)
    ✓ handles parsing errors and displays inline error (37 ms)
    ✓ clears the input after successful upload (12 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.157 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (133 ms)
    ✓ shows loading state while processing (119 ms)
    ✓ handles invalid file type and calls onUploadError (17 ms)
    ✓ handles parsing errors and calls onUploadError (11 ms)
    ✓ handles invalid file type and displays inline error (34 ms)
    ✓ handles parsing errors and displays inline error (12 ms)
    ✓ clears the input after successful upload (5 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.691 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (297 ms)
    ✓ shows loading state while processing (160 ms)
    ✓ handles invalid file type and calls onUploadError (23 ms)
    ✓ handles parsing errors and calls onUploadError (22 ms)
    ✓ handles invalid file type and displays inline error (112 ms)
    ✓ handles parsing errors and displays inline error (53 ms)
    ✓ clears the input after successful upload (21 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.929 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (164 ms)
    ✓ shows loading state while processing (135 ms)
    ✓ handles invalid file type and calls onUploadError (25 ms)
    ✓ handles parsing errors and calls onUploadError (13 ms)
    ✓ handles invalid file type and displays inline error (80 ms)
    ✓ handles parsing errors and displays inline error (27 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.432 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (113 ms)
    ✓ shows loading state while processing (127 ms)
    ✓ handles invalid file type and calls onUploadError (25 ms)
    ✓ handles parsing errors and calls onUploadError (41 ms)
    ✓ handles invalid file type and displays inline error (80 ms)
    ✓ handles parsing errors and displays inline error (38 ms)
    ✓ clears the input after successful upload (8 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        3.495 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (232 ms)
    ✓ shows loading state while processing (129 ms)
    ✓ handles invalid file type and calls onUploadError (9 ms)
    ✓ handles parsing errors and calls onUploadError (11 ms)
    ✓ handles invalid file type and displays inline error (95 ms)
    ✓ handles parsing errors and displays inline error (30 ms)
    ✓ clears the input after successful upload (14 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.927 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (237 ms)
    ✓ shows loading state while processing (123 ms)
    ✓ handles invalid file type and calls onUploadError (24 ms)
    ✓ handles parsing errors and calls onUploadError (25 ms)
    ✓ handles invalid file type and displays inline error (80 ms)
    ✓ handles parsing errors and displays inline error (20 ms)
    ✓ clears the input after successful upload (7 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.91 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (222 ms)
    ✓ shows loading state while processing (122 ms)
    ✓ handles invalid file type and calls onUploadError (16 ms)
    ✓ handles parsing errors and calls onUploadError (23 ms)
    ✓ handles invalid file type and displays inline error (146 ms)
    ✓ handles parsing errors and displays inline error (20 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.706 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (138 ms)
    ✓ shows loading state while processing (138 ms)
    ✓ handles invalid file type and calls onUploadError (76 ms)
    ✓ handles parsing errors and calls onUploadError (17 ms)
    ✓ handles invalid file type and displays inline error (185 ms)
    ✓ handles parsing errors and displays inline error (60 ms)
    ✓ clears the input after successful upload (13 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.163 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (287 ms)
    ✓ shows loading state while processing (148 ms)
    ✓ handles invalid file type and calls onUploadError (81 ms)
    ✓ handles parsing errors and calls onUploadError (72 ms)
    ✓ handles invalid file type and displays inline error (273 ms)
    ✓ handles parsing errors and displays inline error (44 ms)
    ✓ clears the input after successful upload (26 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.551 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (182 ms)
    ✓ shows loading state while processing (149 ms)
    ✓ handles invalid file type and calls onUploadError (12 ms)
    ✓ handles parsing errors and calls onUploadError (14 ms)
    ✓ handles invalid file type and displays inline error (84 ms)
    ✓ handles parsing errors and displays inline error (29 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.753 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (279 ms)
    ✓ shows loading state while processing (166 ms)
    ✓ handles invalid file type and calls onUploadError (80 ms)
    ✓ handles parsing errors and calls onUploadError (45 ms)
    ✓ handles invalid file type and displays inline error (165 ms)
    ✓ handles parsing errors and displays inline error (39 ms)
    ✓ clears the input after successful upload (22 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.053 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (240 ms)
    ✓ shows loading state while processing (142 ms)
    ✓ handles invalid file type and calls onUploadError (20 ms)
    ✓ handles parsing errors and calls onUploadError (62 ms)
    ✓ handles invalid file type and displays inline error (82 ms)
    ✓ handles parsing errors and displays inline error (34 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.823 s, estimated 5 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (244 ms)
    ✓ shows loading state while processing (140 ms)
    ✓ handles invalid file type and calls onUploadError (14 ms)
    ✓ handles parsing errors and calls onUploadError (12 ms)
    ✓ handles invalid file type and displays inline error (111 ms)
    ✓ handles parsing errors and displays inline error (26 ms)
    ✓ clears the input after successful upload (11 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.588 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (181 ms)
    ✓ shows loading state while processing (123 ms)
    ✓ handles invalid file type and calls onUploadError (13 ms)
    ✓ handles parsing errors and calls onUploadError (26 ms)
    ✓ handles invalid file type and displays inline error (120 ms)
    ✓ handles parsing errors and displays inline error (22 ms)
    ✓ clears the input after successful upload (17 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.933 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (145 ms)
    ✓ shows loading state while processing (128 ms)
    ✓ handles invalid file type and calls onUploadError (24 ms)
    ✓ handles parsing errors and calls onUploadError (17 ms)
    ✓ handles invalid file type and displays inline error (98 ms)
    ✓ handles parsing errors and displays inline error (22 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.85 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (406 ms)
    ✓ shows loading state while processing (123 ms)
    ✓ handles invalid file type and calls onUploadError (35 ms)
    ✓ handles parsing errors and calls onUploadError (38 ms)
    ✓ handles invalid file type and displays inline error (94 ms)
    ✓ handles parsing errors and displays inline error (64 ms)
    ✓ clears the input after successful upload (43 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.44 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (136 ms)
    ✓ shows loading state while processing (123 ms)
    ✓ handles invalid file type and calls onUploadError (8 ms)
    ✓ handles parsing errors and calls onUploadError (10 ms)
    ✓ handles invalid file type and displays inline error (35 ms)
    ✓ handles parsing errors and displays inline error (17 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.592 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (136 ms)
    ✓ shows loading state while processing (121 ms)
    ✓ handles invalid file type and calls onUploadError (11 ms)
    ✓ handles parsing errors and calls onUploadError (8 ms)
    ✓ handles invalid file type and displays inline error (52 ms)
    ✓ handles parsing errors and displays inline error (18 ms)
    ✓ clears the input after successful upload (7 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.89 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (182 ms)
    ✓ shows loading state while processing (133 ms)
    ✓ handles invalid file type and calls onUploadError (41 ms)
    ✓ handles parsing errors and calls onUploadError (35 ms)
    ✓ handles invalid file type and displays inline error (183 ms)
    ✓ handles parsing errors and displays inline error (50 ms)
    ✓ clears the input after successful upload (59 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.436 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (168 ms)
    ✓ shows loading state while processing (132 ms)
    ✓ handles invalid file type and calls onUploadError (16 ms)
    ✓ handles parsing errors and calls onUploadError (13 ms)
    ✓ handles invalid file type and displays inline error (42 ms)
    ✓ handles parsing errors and displays inline error (15 ms)
    ✓ clears the input after successful upload (7 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.037 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (172 ms)
    ✓ shows loading state while processing (126 ms)
    ✓ handles invalid file type and calls onUploadError (29 ms)
    ✓ handles parsing errors and calls onUploadError (39 ms)
    ✓ handles invalid file type and displays inline error (63 ms)
    ✓ handles parsing errors and displays inline error (19 ms)
    ✓ clears the input after successful upload (6 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.556 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (291 ms)
    ✓ shows loading state while processing (122 ms)
    ✓ handles invalid file type and calls onUploadError (23 ms)
    ✓ handles parsing errors and calls onUploadError (31 ms)
    ✓ handles invalid file type and displays inline error (55 ms)
    ✓ handles parsing errors and displays inline error (18 ms)
    ✓ clears the input after successful upload (12 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.997 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (195 ms)
    ✓ shows loading state while processing (149 ms)
    ✓ handles invalid file type and calls onUploadError (21 ms)
    ✓ handles parsing errors and calls onUploadError (72 ms)
    ✓ handles invalid file type and displays inline error (214 ms)
    ✓ handles parsing errors and displays inline error (67 ms)
    ✓ clears the input after successful upload (27 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.917 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (100 ms)
    ✓ shows loading state while processing (121 ms)
    ✓ handles invalid file type and calls onUploadError (8 ms)
    ✓ handles parsing errors and calls onUploadError (10 ms)
    ✓ handles invalid file type and displays inline error (54 ms)
    ✓ handles parsing errors and displays inline error (18 ms)
    ✓ clears the input after successful upload (7 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        2.794 s, estimated 3 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (109 ms)
    ✓ shows loading state while processing (130 ms)
    ✓ handles invalid file type and calls onUploadError (26 ms)
    ✓ handles parsing errors and calls onUploadError (16 ms)
    ✓ handles invalid file type and displays inline error (196 ms)
    ✓ handles parsing errors and displays inline error (101 ms)
    ✓ clears the input after successful upload (33 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        4.966 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (263 ms)
    ✓ shows loading state while processing (123 ms)
    ✓ handles invalid file type and calls onUploadError (34 ms)
    ✓ handles parsing errors and calls onUploadError (14 ms)
    ✓ handles invalid file type and displays inline error (81 ms)
    ✓ handles parsing errors and displays inline error (40 ms)
    ✓ clears the input after successful upload (15 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        3.765 s, estimated 4 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (128 ms)
    ✓ shows loading state while processing (126 ms)
    ✓ handles invalid file type and calls onUploadError (12 ms)
    ✓ handles parsing errors and calls onUploadError (12 ms)
    ✓ handles invalid file type and displays inline error (65 ms)
    ✓ handles parsing errors and displays inline error (21 ms)
    ✓ clears the input after successful upload (10 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        6.459 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (338 ms)
    ✓ shows loading state while processing (144 ms)
    ✓ handles invalid file type and calls onUploadError (56 ms)
    ✓ handles parsing errors and calls onUploadError (64 ms)
    ✓ handles invalid file type and displays inline error (140 ms)
    ✓ handles parsing errors and displays inline error (43 ms)
    ✓ clears the input after successful upload (24 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.038 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (277 ms)
    ✓ shows loading state while processing (122 ms)
    ✓ handles invalid file type and calls onUploadError (8 ms)
    ✓ handles parsing errors and calls onUploadError (7 ms)
    ✓ handles invalid file type and displays inline error (34 ms)
    ✓ handles parsing errors and displays inline error (12 ms)
    ✓ clears the input after successful upload (6 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.594 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (111 ms)
    ✓ shows loading state while processing (121 ms)
    ✓ handles invalid file type and calls onUploadError (11 ms)
    ✓ handles parsing errors and calls onUploadError (13 ms)
    ✓ handles invalid file type and displays inline error (51 ms)
    ✓ handles parsing errors and displays inline error (16 ms)
    ✓ clears the input after successful upload (9 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.267 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |
      18 |   it('renders upload button and help text', () => {
    > 19 |     render(<ExcelUploader onUploadSuccess={() => {}} onUploadError={() => {}} />);
         |           ^
      20 |     expect(screen.getByLabelText('Upload Excel file')).toBeInTheDocument();
      21 |     expect(screen.getByText('Choose Excel File (.xlsx, .xls)')).toBeInTheDocument();
      22 |     expect(screen.getByText('Supported formats: .xlsx, .xls (max 5MB)')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:19:11)

PASS src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ✓ renders upload button and help text (148 ms)
    ✓ shows loading state while processing (125 ms)
    ✓ handles invalid file type and calls onUploadError (39 ms)
    ✓ handles parsing errors and calls onUploadError (26 ms)
    ✓ handles invalid file type and displays inline error (63 ms)
    ✓ handles parsing errors and displays inline error (13 ms)
    ✓ clears the input after successful upload (6 ms)
    ○ skipped handles successful file upload

Test Suites: 1 passed, 1 total
Tests:       1 skipped, 7 passed, 8 total
Snapshots:   0 total
Time:        5.485 s
Ran all test suites matching /src\/components\/ExcelUploader\/ExcelUploader.test.tsx/i.

