  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      15 |
      16 |   it('renders header and upload component', () => {
    > 17 |     render(<App />);
         |           ^
      18 |     
      19 |     expect(screen.getByText('Excel Workout PWA')).toBeInTheDocument();
      20 |     expect(screen.getByText('Upload your workout program to get started')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/App.test.tsx:17:11)


Test Suites: 2 failed, 1 passed, 3 total
Tests:       4 failed, 16 passed, 20 total
Snapshots:   0 total
Time:        7.453 s, estimated 8 s
Ran all test suites related to changed files.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      15 |
      16 |   it('renders header and upload component', () => {
    > 17 |     render(<App />);
         |           ^
      18 |     
      19 |     expect(screen.getByText('Excel Workout PWA')).toBeInTheDocument();
      20 |     expect(screen.getByText('Upload your workout program to get started')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/App.test.tsx:17:11)

FAIL src/App.test.tsx (6.522 s)
  App
    ‚úì renders header and upload component (14 ms)
    ‚úï shows success message after successful upload (5001 ms)
    ‚úï shows error message when upload fails (1007 ms)
    ‚úì applies correct CSS classes to messages (7 ms)

  ‚óè App ‚Ä∫ shows success message after successful upload

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      22 |   });
      23 |
    > 24 |   it('shows success message after successful upload', async () => {
         |   ^
      25 |     (parseExcelFile as jest.Mock).mockResolvedValue([]);
      26 |     
      27 |     render(<App />);

      at src/App.test.tsx:24:3
      at Object.<anonymous> (src/App.test.tsx:11:1)

  ‚óè App ‚Ä∫ shows error message when upload fails

    Unable to find role="status" and name "Failed to parse Excel file"

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mUpload your workout program to get started[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<div[39m
              [33maria-label[39m=[32m"Excel file upload"[39m
              [33mclass[39m=[32m"container"[39m
              [33mrole[39m=[32m"region"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"uploadLabel"[39m
              [36m>[39m
                [36m<input[39m
                  [33maccept[39m=[32m".xlsx,.xls"[39m
                  [33maria-describedby[39m=[32m"upload-error"[39m
                  [33maria-label[39m=[32m"Choose Excel file"[39m
                  [33mclass[39m=[32m"fileInput"[39m
                  [33mtype[39m=[32m"file"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"uploadButton"[39m
                [36m>[39m
                  [0mChoose Excel File[0m
                [36m</span>[39m
              [36m</label>[39m
              [36m<div[39m
                [33mclass[39m=[32m"helpText"[39m
              [36m>[39m
                [0mSupported formats: .xlsx, .xls[0m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33maria-live[39m=[32m"polite"[39m
              [33mclass[39m=[32m"App-message error"[39m
              [33mrole[39m=[32m"status"[39m
            [36m>[39m
              [0mFailed to parse Excel file[0m
            [36m</div>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      53 |     fireEvent.change(input, { target: { files: [file] } });
      54 |     
    > 55 |     await waitFor(() => {
         |                  ^
      56 |       const errorElement = screen.getByRole('status', { name: errorMessage });
      57 |       expect(errorElement).toBeInTheDocument();
      58 |       expect(errorElement).toHaveClass('App-message', 'error');

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:166:27)
      at Object.<anonymous> (src/App.test.tsx:55:18)

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      18 |
      19 |   it('renders upload button and help text', () => {
    > 20 |     render(<ExcelUploader />);
         |           ^
      21 |     
      22 |     expect(screen.getByLabelText('Choose Excel file')).toBeInTheDocument();
      23 |     expect(screen.getByText('Choose Excel File')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:20:11)

  console.error
    Warning: An update to ExcelUploader inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ExcelUploader (/workspaces/Excel-workout/src/components/ExcelUploader/ExcelUploader.tsx:11:3)

      43 |       onUploadError?.(err instanceof Error ? err : new Error(message));
      44 |     } finally {
    > 45 |       setIsLoading(false);
         |       ^
      46 |     }
      47 |   }, [onUploadSuccess, onUploadError]);
      48 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at src/components/ExcelUploader/ExcelUploader.tsx:45:7

FAIL src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ‚úì renders upload button and help text (7 ms)
    ‚úì shows loading state while processing (104 ms)
    ‚úì handles successful file upload (5 ms)
    ‚úï handles invalid file type (7 ms)
    ‚úï handles parsing errors (9 ms)
    ‚úì clears the input after successful upload (8 ms)

  ‚óè ExcelUploader ‚Ä∫ handles invalid file type

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      79 |     render(<ExcelUploader />);
      80 |     
    > 81 |     const input2 = screen.getByLabelText('Choose Excel file');
         |                           ^
      82 |     fireEvent.change(input2, { target: { files: [file] } });
      83 |     
      84 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:81:27)

  ‚óè ExcelUploader ‚Ä∫ handles parsing errors

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      109 |     render(<ExcelUploader />);
      110 |     
    > 111 |     const input2 = screen.getByLabelText('Choose Excel file');
          |                           ^
      112 |     fireEvent.change(input2, { target: { files: [file] } });
      113 |     
      114 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:111:27)

  console.error
    Error parsing Excel file: Error: No data found in the Excel file (or file is too short).
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:20:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:49:9)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:49:9)

  console.warn
    Row 4 is missing an exercise name and might be skipped.

      116 |
      117 |       if (!exercise.name) {
    > 118 |           console.warn(`Row ${rowIndex + 3} is missing an exercise name and might be skipped.`); // +3 because of skipping first two rows
          |                   ^
      119 |       }
      120 |       return exercise as Exercise;
      121 |     }).filter(exercise => exercise.name !== undefined) as Exercise[];

      at map (src/features/excelParsing/excelParser.ts:118:19)
          at Array.map (<anonymous>)
      at parseExcelFile (src/features/excelParsing/excelParser.ts:81:44)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:182:20)

  console.error
    Error parsing Excel file: Error: Missing header row in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:33:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:225:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:225:7)

  console.error
    Error parsing Excel file: Error: Missing required 'Exercise' column in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:77:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:283:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:283:7)

PASS src/features/excelParsing/excelParser.test.ts
  parseExcelFile
    ‚úì should throw an error if the file is empty (18 ms)
    ‚úì should parse a valid Excel file and return workout data (6 ms)
    ‚úì should handle dynamic header mapping correctly (1 ms)
    ‚úì should correctly extract workout day
    ‚úì should handle missing exercise names (2 ms)
    ‚úì should handle invalid number values for sets and load (1 ms)
    ‚úì should throw an error for missing header row (1 ms)
    ‚úì should handle different week formats (6 ms)
    ‚úì should handle mixed-case headers (1 ms)
    ‚úì should throw an error if "Exercise" header is misspelled (2 ms)

Test Suites: 2 failed, 1 passed, 3 total
Tests:       4 failed, 16 passed, 20 total
Snapshots:   0 total
Time:        6.976 s, estimated 8 s
Ran all test suites related to changed files.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      15 |
      16 |   it('renders header and upload component', () => {
    > 17 |     render(<App />);
         |           ^
      18 |     
      19 |     expect(screen.getByText('Excel Workout PWA')).toBeInTheDocument();
      20 |     expect(screen.getByText('Upload your workout program to get started')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/App.test.tsx:17:11)

FAIL src/App.test.tsx (6.828 s)
  App
    ‚úì renders header and upload component (36 ms)
    ‚úï shows success message after successful upload (5002 ms)
    ‚úï shows error message when upload fails (1008 ms)
    ‚úì applies correct CSS classes to messages (8 ms)

  ‚óè App ‚Ä∫ shows success message after successful upload

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      22 |   });
      23 |
    > 24 |   it('shows success message after successful upload', async () => {
         |   ^
      25 |     (parseExcelFile as jest.Mock).mockResolvedValue([]);
      26 |     
      27 |     render(<App />);

      at src/App.test.tsx:24:3
      at Object.<anonymous> (src/App.test.tsx:11:1)

  ‚óè App ‚Ä∫ shows error message when upload fails

    Unable to find role="status" and name "Failed to parse Excel file"

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mUpload your workout program to get started[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<div[39m
              [33maria-label[39m=[32m"Excel file upload"[39m
              [33mclass[39m=[32m"container"[39m
              [33mrole[39m=[32m"region"[39m
            [36m>[39m
              [36m<label[39m
                [33mclass[39m=[32m"uploadLabel"[39m
              [36m>[39m
                [36m<input[39m
                  [33maccept[39m=[32m".xlsx,.xls"[39m
                  [33maria-describedby[39m=[32m"upload-error"[39m
                  [33maria-label[39m=[32m"Choose Excel file"[39m
                  [33mclass[39m=[32m"fileInput"[39m
                  [33mtype[39m=[32m"file"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"uploadButton"[39m
                [36m>[39m
                  [0mChoose Excel File[0m
                [36m</span>[39m
              [36m</label>[39m
              [36m<div[39m
                [33mclass[39m=[32m"helpText"[39m
              [36m>[39m
                [0mSupported formats: .xlsx, .xls[0m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33maria-live[39m=[32m"polite"[39m
              [33mclass[39m=[32m"App-message error"[39m
              [33mrole[39m=[32m"status"[39m
            [36m>[39m
              [0mFailed to parse Excel file[0m
            [36m</div>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      53 |     fireEvent.change(input, { target: { files: [file] } });
      54 |     
    > 55 |     await waitFor(() => {
         |                  ^
      56 |       const errorElement = screen.getByRole('status', { name: errorMessage });
      57 |       expect(errorElement).toBeInTheDocument();
      58 |       expect(errorElement).toHaveClass('App-message', 'error');

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:166:27)
      at Object.<anonymous> (src/App.test.tsx:55:18)

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      18 |
      19 |   it('renders upload button and help text', () => {
    > 20 |     render(<ExcelUploader />);
         |           ^
      21 |     
      22 |     expect(screen.getByLabelText('Choose Excel file')).toBeInTheDocument();
      23 |     expect(screen.getByText('Choose Excel File')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:20:11)

  console.error
    Warning: An update to ExcelUploader inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ExcelUploader (/workspaces/Excel-workout/src/components/ExcelUploader/ExcelUploader.tsx:11:3)

      43 |       onUploadError?.(err instanceof Error ? err : new Error(message));
      44 |     } finally {
    > 45 |       setIsLoading(false);
         |       ^
      46 |     }
      47 |   }, [onUploadSuccess, onUploadError]);
      48 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at src/components/ExcelUploader/ExcelUploader.tsx:45:7

FAIL src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ‚úì renders upload button and help text (10 ms)
    ‚úì shows loading state while processing (106 ms)
    ‚úì handles successful file upload (6 ms)
    ‚úï handles invalid file type (8 ms)
    ‚úï handles parsing errors (10 ms)
    ‚úì clears the input after successful upload (19 ms)

  ‚óè ExcelUploader ‚Ä∫ handles invalid file type

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      79 |     render(<ExcelUploader />);
      80 |     
    > 81 |     const input2 = screen.getByLabelText('Choose Excel file');
         |                           ^
      82 |     fireEvent.change(input2, { target: { files: [file] } });
      83 |     
      84 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:81:27)

  ‚óè ExcelUploader ‚Ä∫ handles parsing errors

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      109 |     render(<ExcelUploader />);
      110 |     
    > 111 |     const input2 = screen.getByLabelText('Choose Excel file');
          |                           ^
      112 |     fireEvent.change(input2, { target: { files: [file] } });
      113 |     
      114 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:111:27)

  console.error
    Error parsing Excel file: Error: No data found in the Excel file (or file is too short).
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:20:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:49:9)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:49:9)

  console.warn
    Row 4 is missing an exercise name and might be skipped.

      116 |
      117 |       if (!exercise.name) {
    > 118 |           console.warn(`Row ${rowIndex + 3} is missing an exercise name and might be skipped.`); // +3 because of skipping first two rows
          |                   ^
      119 |       }
      120 |       return exercise as Exercise;
      121 |     }).filter(exercise => exercise.name !== undefined) as Exercise[];

      at map (src/features/excelParsing/excelParser.ts:118:19)
          at Array.map (<anonymous>)
      at parseExcelFile (src/features/excelParsing/excelParser.ts:81:44)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:182:20)

  console.error
    Error parsing Excel file: Error: Missing header row in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:33:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:225:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:225:7)

  console.error
    Error parsing Excel file: Error: Missing required 'Exercise' column in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:77:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:283:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:283:7)

PASS src/features/excelParsing/excelParser.test.ts
  parseExcelFile
    ‚úì should throw an error if the file is empty (28 ms)
    ‚úì should parse a valid Excel file and return workout data (14 ms)
    ‚úì should handle dynamic header mapping correctly (2 ms)
    ‚úì should correctly extract workout day
    ‚úì should handle missing exercise names (3 ms)
    ‚úì should handle invalid number values for sets and load
    ‚úì should throw an error for missing header row (2 ms)
    ‚úì should handle different week formats (2 ms)
    ‚úì should handle mixed-case headers (1 ms)
    ‚úì should throw an error if "Exercise" header is misspelled (1 ms)

Test Suites: 2 failed, 1 passed, 3 total
Tests:       4 failed, 16 passed, 20 total
Snapshots:   0 total
Time:        7.308 s
Ran all test suites related to changed files.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      15 |
      16 |   it('renders header and upload component', () => {
    > 17 |     render(<App />);
         |           ^
      18 |     
      19 |     expect(screen.getByText('Excel Workout PWA')).toBeInTheDocument();
      20 |     expect(screen.getByText('Upload your workout program to get started')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/App.test.tsx:17:11)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      15 |         setPrograms(loadedPrograms);
      16 |       } catch (err) {
    > 17 |         setError('Failed to load workout programs. Please try again later.');
         |         ^
      18 |         console.error('Error loading programs:', err);
      19 |       } finally {
      20 |         setIsLoading(false);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setError (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:17:9)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:17:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      18 |         console.error('Error loading programs:', err);
      19 |       } finally {
    > 20 |         setIsLoading(false);
         |         ^
      21 |       }
      22 |     };
      23 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:20:9)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:27:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at workLoop (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:266:34)
        at flushWork (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:239:14)
        at performWorkUntilDeadline (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:533:21)
        at Timeout.task [as _onTimeout] (/workspaces/Excel-workout/node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)
        at listOnTimeout (node:internal/timers:581:17)
        at processTimers (node:internal/timers:519:7)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:48:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:65:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at workLoop (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:266:34)
        at flushWork (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:239:14)
        at performWorkUntilDeadline (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:533:21)
        at Timeout.task [as _onTimeout] (/workspaces/Excel-workout/node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)
        at listOnTimeout (node:internal/timers:581:17)
        at processTimers (node:internal/timers:519:7)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

FAIL src/App.test.tsx (7.057 s)
  App
    ‚úï renders header and upload component (60 ms)
    ‚úï shows success message after successful upload (5001 ms)
    ‚úï shows error message when upload fails (1007 ms)
    ‚úì applies correct CSS classes to messages (11 ms)

  ‚óè App ‚Ä∫ renders header and upload component

    TestingLibraryElementError: Unable to find an element with the text: Upload your workout program to get started. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mTrack and manage your workout programs[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"section-title"[39m
              [36m>[39m
                [0mUpload Program[0m
              [36m</h2>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Excel file upload"[39m
                [33mclass[39m=[32m"container"[39m
                [33mrole[39m=[32m"region"[39m
              [36m>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"uploadLabel"[39m
                [36m>[39m
                  [36m<input[39m
                    [33maccept[39m=[32m".xlsx,.xls"[39m
                    [33maria-label[39m=[32m"Choose Excel file"[39m
                    [33mclass[39m=[32m"fileInput"[39m
                    [33mtype[39m=[32m"file"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"uploadButton"[39m
                  [36m>[39m
                    [0mChoose Excel File[0m
                  [36m</span>[39m
                [36m</label>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"helpText"[39m
                [36m>[39m
                  [0mSupported formats: .xlsx, .xls[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</section>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Loading workout programs"[39m
                [33mclass[39m=[32m"loading"[39m
                [33mrole[39m=[32m"status"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"spinner"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"loadingText"[39m
                [36m>[39m
                  [0mLoading programs...[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</section>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      18 |     
      19 |     expect(screen.getByText('Excel Workout PWA')).toBeInTheDocument();
    > 20 |     expect(screen.getByText('Upload your workout program to get started')).toBeInTheDocument();
         |                   ^
      21 |     expect(screen.getByLabelText('Choose Excel file')).toBeInTheDocument();
      22 |   });
      23 |

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/App.test.tsx:20:19)

  ‚óè App ‚Ä∫ shows success message after successful upload

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      22 |   });
      23 |
    > 24 |   it('shows success message after successful upload', async () => {
         |   ^
      25 |     (parseExcelFile as jest.Mock).mockResolvedValue([]);
      26 |     
      27 |     render(<App />);

      at src/App.test.tsx:24:3
      at Object.<anonymous> (src/App.test.tsx:11:1)

  ‚óè App ‚Ä∫ shows error message when upload fails

    Unable to find role="status" and name "Failed to parse Excel file"

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mTrack and manage your workout programs[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"section-title"[39m
              [36m>[39m
                [0mUpload Program[0m
              [36m</h2>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Excel file upload"[39m
                [33mclass[39m=[32m"container"[39m
                [33mrole[39m=[32m"region"[39m
              [36m>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"uploadLabel"[39m
                [36m>[39m
                  [36m<input[39m
                    [33maccept[39m=[32m".xlsx,.xls"[39m
                    [33maria-describedby[39m=[32m"upload-error"[39m
                    [33maria-label[39m=[32m"Choose Excel file"[39m
                    [33mclass[39m=[32m"fileInput"[39m
                    [33mtype[39m=[32m"file"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"uploadButton"[39m
                  [36m>[39m
                    [0mChoose Excel File[0m
                  [36m</span>[39m
                [36m</label>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"helpText"[39m
                [36m>[39m
                  [0mSupported formats: .xlsx, .xls[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33maria-live[39m=[32m"polite"[39m
                [33mclass[39m=[32m"App-message error"[39m
                [33mrole[39m=[32m"status"[39m
              [36m>[39m
                [0mFailed to parse Excel file[0m
              [36m</div>[39m
            [36m</section>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mFailed to load workout programs. Please try again later.[0m
              [36m</div>[39m
            [36m</section>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      53 |     fireEvent.change(input, { target: { files: [file] } });
      54 |     
    > 55 |     await waitFor(() => {
         |                  ^
      56 |       const errorElement = screen.getByRole('status', { name: errorMessage });
      57 |       expect(errorElement).toBeInTheDocument();
      58 |       expect(errorElement).toHaveClass('App-message', 'error');

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:166:27)
      at Object.<anonymous> (src/App.test.tsx:55:18)

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      18 |
      19 |   it('renders upload button and help text', () => {
    > 20 |     render(<ExcelUploader />);
         |           ^
      21 |     
      22 |     expect(screen.getByLabelText('Choose Excel file')).toBeInTheDocument();
      23 |     expect(screen.getByText('Choose Excel File')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:20:11)

  console.error
    Warning: An update to ExcelUploader inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ExcelUploader (/workspaces/Excel-workout/src/components/ExcelUploader/ExcelUploader.tsx:11:3)

      43 |       onUploadError?.(err instanceof Error ? err : new Error(message));
      44 |     } finally {
    > 45 |       setIsLoading(false);
         |       ^
      46 |     }
      47 |   }, [onUploadSuccess, onUploadError]);
      48 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at src/components/ExcelUploader/ExcelUploader.tsx:45:7

FAIL src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ‚úì renders upload button and help text (23 ms)
    ‚úì shows loading state while processing (130 ms)
    ‚úì handles successful file upload (5 ms)
    ‚úï handles invalid file type (4 ms)
    ‚úï handles parsing errors (13 ms)
    ‚úì clears the input after successful upload (6 ms)

  ‚óè ExcelUploader ‚Ä∫ handles invalid file type

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      79 |     render(<ExcelUploader />);
      80 |     
    > 81 |     const input2 = screen.getByLabelText('Choose Excel file');
         |                           ^
      82 |     fireEvent.change(input2, { target: { files: [file] } });
      83 |     
      84 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:81:27)

  ‚óè ExcelUploader ‚Ä∫ handles parsing errors

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      109 |     render(<ExcelUploader />);
      110 |     
    > 111 |     const input2 = screen.getByLabelText('Choose Excel file');
          |                           ^
      112 |     fireEvent.change(input2, { target: { files: [file] } });
      113 |     
      114 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:111:27)

  console.error
    Error parsing Excel file: Error: No data found in the Excel file (or file is too short).
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:20:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:49:9)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:49:9)

  console.warn
    Row 4 is missing an exercise name and might be skipped.

      116 |
      117 |       if (!exercise.name) {
    > 118 |           console.warn(`Row ${rowIndex + 3} is missing an exercise name and might be skipped.`); // +3 because of skipping first two rows
          |                   ^
      119 |       }
      120 |       return exercise as Exercise;
      121 |     }).filter(exercise => exercise.name !== undefined) as Exercise[];

      at map (src/features/excelParsing/excelParser.ts:118:19)
          at Array.map (<anonymous>)
      at parseExcelFile (src/features/excelParsing/excelParser.ts:81:44)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:182:20)

  console.error
    Error parsing Excel file: Error: Missing header row in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:33:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:225:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:225:7)

  console.error
    Error parsing Excel file: Error: Missing required 'Exercise' column in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:77:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:283:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:283:7)

PASS src/features/excelParsing/excelParser.test.ts
  parseExcelFile
    ‚úì should throw an error if the file is empty (23 ms)
    ‚úì should parse a valid Excel file and return workout data (1 ms)
    ‚úì should handle dynamic header mapping correctly (1 ms)
    ‚úì should correctly extract workout day (1 ms)
    ‚úì should handle missing exercise names (2 ms)
    ‚úì should handle invalid number values for sets and load
    ‚úì should throw an error for missing header row (2 ms)
    ‚úì should handle different week formats (2 ms)
    ‚úì should handle mixed-case headers (1 ms)
    ‚úì should throw an error if "Exercise" header is misspelled (2 ms)

Test Suites: 2 failed, 1 passed, 3 total
Tests:       5 failed, 15 passed, 20 total
Snapshots:   0 total
Time:        7.497 s, estimated 8 s
Ran all test suites related to changed files.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      15 |
      16 |   it('renders header and upload component', () => {
    > 17 |     render(<App />);
         |           ^
      18 |     
      19 |     expect(screen.getByText('Excel Workout PWA')).toBeInTheDocument();
      20 |     expect(screen.getByText('Upload your workout program to get started')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/App.test.tsx:17:11)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      15 |         setPrograms(loadedPrograms);
      16 |       } catch (err) {
    > 17 |         setError('Failed to load workout programs. Please try again later.');
         |         ^
      18 |         console.error('Error loading programs:', err);
      19 |       } finally {
      20 |         setIsLoading(false);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setError (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:17:9)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:17:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      18 |         console.error('Error loading programs:', err);
      19 |       } finally {
    > 20 |         setIsLoading(false);
         |         ^
      21 |       }
      22 |     };
      23 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:20:9)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:27:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at workLoop (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:266:34)
        at flushWork (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:239:14)
        at performWorkUntilDeadline (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:533:21)
        at Timeout.task [as _onTimeout] (/workspaces/Excel-workout/node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)
        at listOnTimeout (node:internal/timers:581:17)
        at processTimers (node:internal/timers:519:7)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:48:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:65:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at workLoop (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:266:34)
        at flushWork (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:239:14)
        at performWorkUntilDeadline (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:533:21)
        at Timeout.task [as _onTimeout] (/workspaces/Excel-workout/node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)
        at listOnTimeout (node:internal/timers:581:17)
        at processTimers (node:internal/timers:519:7)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

FAIL src/App.test.tsx (6.302 s)
  App
    ‚úï renders header and upload component (40 ms)
    ‚úï shows success message after successful upload (5000 ms)
    ‚úï shows error message when upload fails (1007 ms)
    ‚úì applies correct CSS classes to messages (13 ms)

  ‚óè App ‚Ä∫ renders header and upload component

    TestingLibraryElementError: Unable to find an element with the text: Upload your workout program to get started. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mTrack and manage your workout programs[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"section-title"[39m
              [36m>[39m
                [0mUpload Program[0m
              [36m</h2>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Excel file upload"[39m
                [33mclass[39m=[32m"container"[39m
                [33mrole[39m=[32m"region"[39m
              [36m>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"uploadLabel"[39m
                [36m>[39m
                  [36m<input[39m
                    [33maccept[39m=[32m".xlsx,.xls"[39m
                    [33maria-label[39m=[32m"Choose Excel file"[39m
                    [33mclass[39m=[32m"fileInput"[39m
                    [33mtype[39m=[32m"file"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"uploadButton"[39m
                  [36m>[39m
                    [0mChoose Excel File[0m
                  [36m</span>[39m
                [36m</label>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"helpText"[39m
                [36m>[39m
                  [0mSupported formats: .xlsx, .xls[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</section>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Loading workout programs"[39m
                [33mclass[39m=[32m"loading"[39m
                [33mrole[39m=[32m"status"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"spinner"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"loadingText"[39m
                [36m>[39m
                  [0mLoading programs...[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</section>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      18 |     
      19 |     expect(screen.getByText('Excel Workout PWA')).toBeInTheDocument();
    > 20 |     expect(screen.getByText('Upload your workout program to get started')).toBeInTheDocument();
         |                   ^
      21 |     expect(screen.getByLabelText('Choose Excel file')).toBeInTheDocument();
      22 |   });
      23 |

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/App.test.tsx:20:19)

  ‚óè App ‚Ä∫ shows success message after successful upload

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      22 |   });
      23 |
    > 24 |   it('shows success message after successful upload', async () => {
         |   ^
      25 |     (parseExcelFile as jest.Mock).mockResolvedValue([]);
      26 |     
      27 |     render(<App />);

      at src/App.test.tsx:24:3
      at Object.<anonymous> (src/App.test.tsx:11:1)

  ‚óè App ‚Ä∫ shows error message when upload fails

    Unable to find role="status" and name "Failed to parse Excel file"

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mTrack and manage your workout programs[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"section-title"[39m
              [36m>[39m
                [0mUpload Program[0m
              [36m</h2>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Excel file upload"[39m
                [33mclass[39m=[32m"container"[39m
                [33mrole[39m=[32m"region"[39m
              [36m>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"uploadLabel"[39m
                [36m>[39m
                  [36m<input[39m
                    [33maccept[39m=[32m".xlsx,.xls"[39m
                    [33maria-describedby[39m=[32m"upload-error"[39m
                    [33maria-label[39m=[32m"Choose Excel file"[39m
                    [33mclass[39m=[32m"fileInput"[39m
                    [33mtype[39m=[32m"file"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"uploadButton"[39m
                  [36m>[39m
                    [0mChoose Excel File[0m
                  [36m</span>[39m
                [36m</label>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"helpText"[39m
                [36m>[39m
                  [0mSupported formats: .xlsx, .xls[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33maria-live[39m=[32m"polite"[39m
                [33mclass[39m=[32m"App-message error"[39m
                [33mrole[39m=[32m"status"[39m
              [36m>[39m
                [0mFailed to parse Excel file[0m
              [36m</div>[39m
            [36m</section>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mFailed to load workout programs. Please try again later.[0m
              [36m</div>[39m
            [36m</section>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      53 |     fireEvent.change(input, { target: { files: [file] } });
      54 |     
    > 55 |     await waitFor(() => {
         |                  ^
      56 |       const errorElement = screen.getByRole('status', { name: errorMessage });
      57 |       expect(errorElement).toBeInTheDocument();
      58 |       expect(errorElement).toHaveClass('App-message', 'error');

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:166:27)
      at Object.<anonymous> (src/App.test.tsx:55:18)

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      18 |
      19 |   it('renders upload button and help text', () => {
    > 20 |     render(<ExcelUploader />);
         |           ^
      21 |     
      22 |     expect(screen.getByLabelText('Choose Excel file')).toBeInTheDocument();
      23 |     expect(screen.getByText('Choose Excel File')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:20:11)

  console.error
    Warning: An update to ExcelUploader inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ExcelUploader (/workspaces/Excel-workout/src/components/ExcelUploader/ExcelUploader.tsx:11:3)

      43 |       onUploadError?.(err instanceof Error ? err : new Error(message));
      44 |     } finally {
    > 45 |       setIsLoading(false);
         |       ^
      46 |     }
      47 |   }, [onUploadSuccess, onUploadError]);
      48 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at src/components/ExcelUploader/ExcelUploader.tsx:45:7

FAIL src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ‚úì renders upload button and help text (11 ms)
    ‚úì shows loading state while processing (106 ms)
    ‚úì handles successful file upload (5 ms)
    ‚úï handles invalid file type (6 ms)
    ‚úï handles parsing errors (8 ms)
    ‚úì clears the input after successful upload (6 ms)

  ‚óè ExcelUploader ‚Ä∫ handles invalid file type

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      79 |     render(<ExcelUploader />);
      80 |     
    > 81 |     const input2 = screen.getByLabelText('Choose Excel file');
         |                           ^
      82 |     fireEvent.change(input2, { target: { files: [file] } });
      83 |     
      84 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:81:27)

  ‚óè ExcelUploader ‚Ä∫ handles parsing errors

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      109 |     render(<ExcelUploader />);
      110 |     
    > 111 |     const input2 = screen.getByLabelText('Choose Excel file');
          |                           ^
      112 |     fireEvent.change(input2, { target: { files: [file] } });
      113 |     
      114 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:111:27)

  console.error
    Error parsing Excel file: Error: No data found in the Excel file (or file is too short).
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:20:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:49:9)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:49:9)

  console.warn
    Row 4 is missing an exercise name and might be skipped.

      116 |
      117 |       if (!exercise.name) {
    > 118 |           console.warn(`Row ${rowIndex + 3} is missing an exercise name and might be skipped.`); // +3 because of skipping first two rows
          |                   ^
      119 |       }
      120 |       return exercise as Exercise;
      121 |     }).filter(exercise => exercise.name !== undefined) as Exercise[];

      at map (src/features/excelParsing/excelParser.ts:118:19)
          at Array.map (<anonymous>)
      at parseExcelFile (src/features/excelParsing/excelParser.ts:81:44)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:182:20)

  console.error
    Error parsing Excel file: Error: Missing header row in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:33:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:225:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:225:7)

  console.error
    Error parsing Excel file: Error: Missing required 'Exercise' column in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:77:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:283:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:283:7)

PASS src/features/excelParsing/excelParser.test.ts
  parseExcelFile
    ‚úì should throw an error if the file is empty (26 ms)
    ‚úì should parse a valid Excel file and return workout data (1 ms)
    ‚úì should handle dynamic header mapping correctly (1 ms)
    ‚úì should correctly extract workout day (1 ms)
    ‚úì should handle missing exercise names (2 ms)
    ‚úì should handle invalid number values for sets and load
    ‚úì should throw an error for missing header row (1 ms)
    ‚úì should handle different week formats (3 ms)
    ‚úì should handle mixed-case headers
    ‚úì should throw an error if "Exercise" header is misspelled (2 ms)

FAIL src/components/ProgramList/ProgramList.test.tsx
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:175:18)
      at node_modules/@jest/core/build/TestScheduler.js:316:17
      at node_modules/emittery/index.js:260:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:258:23)

Test Suites: 3 failed, 1 passed, 4 total
Tests:       5 failed, 15 passed, 20 total
Snapshots:   0 total
Time:        6.967 s, estimated 8 s
Ran all test suites related to changed files.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      15 |
      16 |   it('renders header and upload component', () => {
    > 17 |     render(<App />);
         |           ^
      18 |     
      19 |     expect(screen.getByText('Excel Workout PWA')).toBeInTheDocument();
      20 |     expect(screen.getByText('Upload your workout program to get started')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/App.test.tsx:17:11)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      15 |         setPrograms(loadedPrograms);
      16 |       } catch (err) {
    > 17 |         setError('Failed to load workout programs. Please try again later.');
         |         ^
      18 |         console.error('Error loading programs:', err);
      19 |       } finally {
      20 |         setIsLoading(false);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setError (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:17:9)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:17:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      18 |         console.error('Error loading programs:', err);
      19 |       } finally {
    > 20 |         setIsLoading(false);
         |         ^
      21 |       }
      22 |     };
      23 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:20:9)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:27:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at workLoop (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:266:34)
        at flushWork (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:239:14)
        at performWorkUntilDeadline (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:533:21)
        at Timeout.task [as _onTimeout] (/workspaces/Excel-workout/node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)
        at listOnTimeout (node:internal/timers:581:17)
        at processTimers (node:internal/timers:519:7)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:48:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at flushActQueue (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2667:24)
        at act (/workspaces/Excel-workout/node_modules/react/cjs/react.development.js:2582:11)
        at actWithWarning (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1740:10)
        at /workspaces/Excel-workout/node_modules/@testing-library/react/dist/act-compat.js:63:25
        at renderRoot (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:159:26)
        at render (/workspaces/Excel-workout/node_modules/@testing-library/react/dist/pure.js:246:10)
        at Object.<anonymous> (/workspaces/Excel-workout/src/App.test.tsx:65:11)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

  console.error
    Error loading programs: TypeError: Cannot read properties of undefined (reading 'getAll')
        at getAllWorkoutPrograms (/workspaces/Excel-workout/src/lib/indexedDB.ts:32:19)
        at loadPrograms (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:14:59)
        at /workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:24:5
        at commitHookEffectListMount (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
        at commitPassiveMountOnFiber (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
        at commitPassiveMountEffects_complete (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
        at commitPassiveMountEffects_begin (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
        at commitPassiveMountEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
        at flushPassiveEffectsImpl (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
        at flushPassiveEffects (/workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
        at /workspaces/Excel-workout/node_modules/react-dom/cjs/react-dom.development.js:26808:9
        at workLoop (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:266:34)
        at flushWork (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:239:14)
        at performWorkUntilDeadline (/workspaces/Excel-workout/node_modules/scheduler/cjs/scheduler.development.js:533:21)
        at Timeout.task [as _onTimeout] (/workspaces/Excel-workout/node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)
        at listOnTimeout (node:internal/timers:581:17)
        at processTimers (node:internal/timers:519:7)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

FAIL src/App.test.tsx (6.287 s)
  App
    ‚úï renders header and upload component (51 ms)
    ‚úï shows success message after successful upload (5002 ms)
    ‚úï shows error message when upload fails (1005 ms)
    ‚úì applies correct CSS classes to messages (8 ms)

  ‚óè App ‚Ä∫ renders header and upload component

    TestingLibraryElementError: Unable to find an element with the text: Upload your workout program to get started. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mTrack and manage your workout programs[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"section-title"[39m
              [36m>[39m
                [0mUpload Program[0m
              [36m</h2>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Excel file upload"[39m
                [33mclass[39m=[32m"container"[39m
                [33mrole[39m=[32m"region"[39m
              [36m>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"uploadLabel"[39m
                [36m>[39m
                  [36m<input[39m
                    [33maccept[39m=[32m".xlsx,.xls"[39m
                    [33maria-label[39m=[32m"Choose Excel file"[39m
                    [33mclass[39m=[32m"fileInput"[39m
                    [33mtype[39m=[32m"file"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"uploadButton"[39m
                  [36m>[39m
                    [0mChoose Excel File[0m
                  [36m</span>[39m
                [36m</label>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"helpText"[39m
                [36m>[39m
                  [0mSupported formats: .xlsx, .xls[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</section>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Loading workout programs"[39m
                [33mclass[39m=[32m"loading"[39m
                [33mrole[39m=[32m"status"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"spinner"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"loadingText"[39m
                [36m>[39m
                  [0mLoading programs...[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</section>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      18 |     
      19 |     expect(screen.getByText('Excel Workout PWA')).toBeInTheDocument();
    > 20 |     expect(screen.getByText('Upload your workout program to get started')).toBeInTheDocument();
         |                   ^
      21 |     expect(screen.getByLabelText('Choose Excel file')).toBeInTheDocument();
      22 |   });
      23 |

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/App.test.tsx:20:19)

  ‚óè App ‚Ä∫ shows success message after successful upload

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      22 |   });
      23 |
    > 24 |   it('shows success message after successful upload', async () => {
         |   ^
      25 |     (parseExcelFile as jest.Mock).mockResolvedValue([]);
      26 |     
      27 |     render(<App />);

      at src/App.test.tsx:24:3
      at Object.<anonymous> (src/App.test.tsx:11:1)

  ‚óè App ‚Ä∫ shows error message when upload fails

    Unable to find role="status" and name "Failed to parse Excel file"

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mTrack and manage your workout programs[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"section-title"[39m
              [36m>[39m
                [0mUpload Program[0m
              [36m</h2>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Excel file upload"[39m
                [33mclass[39m=[32m"container"[39m
                [33mrole[39m=[32m"region"[39m
              [36m>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"uploadLabel"[39m
                [36m>[39m
                  [36m<input[39m
                    [33maccept[39m=[32m".xlsx,.xls"[39m
                    [33maria-describedby[39m=[32m"upload-error"[39m
                    [33maria-label[39m=[32m"Choose Excel file"[39m
                    [33mclass[39m=[32m"fileInput"[39m
                    [33mtype[39m=[32m"file"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"uploadButton"[39m
                  [36m>[39m
                    [0mChoose Excel File[0m
                  [36m</span>[39m
                [36m</label>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"helpText"[39m
                [36m>[39m
                  [0mSupported formats: .xlsx, .xls[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33maria-live[39m=[32m"polite"[39m
                [33mclass[39m=[32m"App-message error"[39m
                [33mrole[39m=[32m"status"[39m
              [36m>[39m
                [0mFailed to parse Excel file[0m
              [36m</div>[39m
            [36m</section>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"error"[39m
                [33mrole[39m=[32m"alert"[39m
              [36m>[39m
                [0mFailed to load workout programs. Please try again later.[0m
              [36m</div>[39m
            [36m</section>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      53 |     fireEvent.change(input, { target: { files: [file] } });
      54 |     
    > 55 |     await waitFor(() => {
         |                  ^
      56 |       const errorElement = screen.getByRole('status', { name: errorMessage });
      57 |       expect(errorElement).toBeInTheDocument();
      58 |       expect(errorElement).toHaveClass('App-message', 'error');

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:166:27)
      at Object.<anonymous> (src/App.test.tsx:55:18)

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      18 |
      19 |   it('renders upload button and help text', () => {
    > 20 |     render(<ExcelUploader />);
         |           ^
      21 |     
      22 |     expect(screen.getByLabelText('Choose Excel file')).toBeInTheDocument();
      23 |     expect(screen.getByText('Choose Excel File')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:20:11)

  console.error
    Warning: An update to ExcelUploader inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ExcelUploader (/workspaces/Excel-workout/src/components/ExcelUploader/ExcelUploader.tsx:11:3)

      43 |       onUploadError?.(err instanceof Error ? err : new Error(message));
      44 |     } finally {
    > 45 |       setIsLoading(false);
         |       ^
      46 |     }
      47 |   }, [onUploadSuccess, onUploadError]);
      48 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at src/components/ExcelUploader/ExcelUploader.tsx:45:7

FAIL src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ‚úì renders upload button and help text (6 ms)
    ‚úì shows loading state while processing (105 ms)
    ‚úì handles successful file upload (5 ms)
    ‚úï handles invalid file type (5 ms)
    ‚úï handles parsing errors (18 ms)
    ‚úì clears the input after successful upload (5 ms)

  ‚óè ExcelUploader ‚Ä∫ handles invalid file type

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      79 |     render(<ExcelUploader />);
      80 |     
    > 81 |     const input2 = screen.getByLabelText('Choose Excel file');
         |                           ^
      82 |     fireEvent.change(input2, { target: { files: [file] } });
      83 |     
      84 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:81:27)

  ‚óè ExcelUploader ‚Ä∫ handles parsing errors

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      109 |     render(<ExcelUploader />);
      110 |     
    > 111 |     const input2 = screen.getByLabelText('Choose Excel file');
          |                           ^
      112 |     fireEvent.change(input2, { target: { files: [file] } });
      113 |     
      114 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:111:27)

  console.error
    Error parsing Excel file: Error: No data found in the Excel file (or file is too short).
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:20:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:49:9)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:49:9)

  console.warn
    Row 4 is missing an exercise name and might be skipped.

      116 |
      117 |       if (!exercise.name) {
    > 118 |           console.warn(`Row ${rowIndex + 3} is missing an exercise name and might be skipped.`); // +3 because of skipping first two rows
          |                   ^
      119 |       }
      120 |       return exercise as Exercise;
      121 |     }).filter(exercise => exercise.name !== undefined) as Exercise[];

      at map (src/features/excelParsing/excelParser.ts:118:19)
          at Array.map (<anonymous>)
      at parseExcelFile (src/features/excelParsing/excelParser.ts:81:44)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:182:20)

  console.error
    Error parsing Excel file: Error: Missing header row in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:33:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:225:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:225:7)

  console.error
    Error parsing Excel file: Error: Missing required 'Exercise' column in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:77:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:283:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:283:7)

PASS src/features/excelParsing/excelParser.test.ts
  parseExcelFile
    ‚úì should throw an error if the file is empty (18 ms)
    ‚úì should parse a valid Excel file and return workout data (1 ms)
    ‚úì should handle dynamic header mapping correctly (1 ms)
    ‚úì should correctly extract workout day (1 ms)
    ‚úì should handle missing exercise names (1 ms)
    ‚úì should handle invalid number values for sets and load
    ‚úì should throw an error for missing header row (2 ms)
    ‚úì should handle different week formats (1 ms)
    ‚úì should handle mixed-case headers
    ‚úì should throw an error if "Exercise" header is misspelled (1 ms)

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      56 |     );
      57 |
    > 58 |     render(<ProgramList />);
         |           ^
      59 |     
      60 |     expect(screen.getByLabelText('Loading workout programs')).toBeInTheDocument();
      61 |     expect(screen.getByText('Loading programs...')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ProgramList/ProgramList.test.tsx:58:11)
      at TestScheduler.scheduleTests (node_modules/@jest/core/build/TestScheduler.js:333:13)
      at runJest (node_modules/@jest/core/build/runJest.js:404:19)

  console.error
    Error loading programs: Error: Failed to load programs
        at Object.<anonymous> (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.test.tsx:65:19)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)
        at TestRunner.runTests (/workspaces/Excel-workout/node_modules/jest-runner/build/index.js:101:12)
        at TestScheduler.scheduleTests (/workspaces/Excel-workout/node_modules/@jest/core/build/TestScheduler.js:333:13)
        at runJest (/workspaces/Excel-workout/node_modules/@jest/core/build/runJest.js:404:19)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

FAIL src/components/ProgramList/ProgramList.test.tsx
  ProgramList
    ‚úì shows loading state initially (8 ms)
    ‚úì shows error message when loading fails (9 ms)
    ‚úì shows empty state when no programs exist (11 ms)
    ‚úï displays workout programs when they exist (1004 ms)
    ‚úì applies correct accessibility attributes (49 ms)

  ‚óè ProgramList ‚Ä∫ displays workout programs when they exist

    Found multiple elements with the text: 1 workouts

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<span[39m
      [33mclass[39m=[32m"workoutCount"[39m
    [36m>[39m
      [0m1[0m
      [0m workouts[0m
    [36m</span>[39m

    Ignored nodes: comments, script, style
    [36m<span[39m
      [33mclass[39m=[32m"workoutCount"[39m
    [36m>[39m
      [0m1[0m
      [0m workouts[0m
    [36m</span>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Workout Programs"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<h2[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [0mYour Workout Programs[0m
          [36m</h2>[39m
          [36m<ul[39m
            [33mclass[39m=[32m"list"[39m
          [36m>[39m
            [36m<li[39m
              [33mclass[39m=[32m"item"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"programHeader"[39m
              [36m>[39m
                [36m<h3[39m
                  [33mclass[39m=[32m"programName"[39m
                [36m>[39m
                  [0mTest Program 1[0m
                [36m</h3>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"workoutCount"[39m
                [36m>[39m
                  [0m1[0m
                  [0m workouts[0m
                [36m</span>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"programStats"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"stat"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statLabel"[39m
                  [36m>[39m
                    [0mLast workout:[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statValue"[39m
                  [36m>[39m
                    [0m2/22/2025[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"stat"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statLabel"[39m
                  [36m>[39m
                    [0mCompleted:[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statValue"[39m
                  [36m>[39m
                    [0m1[0m
                    [0m sessions[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"View Test Program 1 details"[39m
                [33mclass[39m=[32m"viewButton"[39m
              [36m>[39m
                [0mView Program[0m
              [36m</button>[39m
            [36m</li>[39m
            [36m<li[39m
              [33mclass[39m=[32m"item"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"programHeader"[39m
              [36m>[39m
                [36m<h3[39m
                  [33mclass[39m=[32m"programName"[39m
                [36m>[39m
                  [0mTest Program 2[0m
                [36m</h3>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"workoutCount"[39m
                [36m>[39m
                  [0m1[0m
                  [0m workouts[0m
                [36m</span>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"programStats"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"stat"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statLabel"[39m
                  [36m>[39m
                    [0mLast workout:[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statValue"[39m
                  [36m>[39m
                    [0mNot started[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"stat"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statLabel"[39m
                  [36m>[39m
                    [0mCompleted:[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statValue"[39m
                  [36m>[39m
                    [0m0[0m
                    [0m sessions[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"View Test Program 2 details"[39m
                [33mclass[39m=[32m"viewButton"[39m
              [36m>[39m
                [0mView Program[0m
              [36m</button>[39m
            [36m</li>[39m
          [36m</ul>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      89 |     render(<ProgramList />);
      90 |     
    > 91 |     await waitFor(() => {
         |                  ^
      92 |       // Check program names are displayed
      93 |       expect(screen.getByText('Test Program 1')).toBeInTheDocument();
      94 |       expect(screen.getByText('Test Program 2')).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:166:27)
      at Object.<anonymous> (src/components/ProgramList/ProgramList.test.tsx:91:18)
      at TestScheduler.scheduleTests (node_modules/@jest/core/build/TestScheduler.js:333:13)
      at runJest (node_modules/@jest/core/build/runJest.js:404:19)

Test Suites: 3 failed, 1 passed, 4 total
Tests:       6 failed, 19 passed, 25 total
Snapshots:   0 total
Time:        7.855 s
Ran all test suites related to changed files.

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      17 |   beforeEach(() => {
      18 |     jest.clearAllMocks();
    > 19 |     (getAllWorkoutPrograms as jest.Mock).mockResolvedValue([]);
         |            ^
      20 |   });
      21 |
      22 |   it('renders header and both components', () => {

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at screen (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/App.test.tsx:19:12)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      13 |       try {
      14 |         const loadedPrograms = await getAllWorkoutPrograms();
    > 15 |         setPrograms(loadedPrograms);
         |         ^
      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
      18 |         console.error('Error loading programs:', err);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setPrograms (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:15:9)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      18 |         console.error('Error loading programs:', err);
      19 |       } finally {
    > 20 |         setIsLoading(false);
         |         ^
      21 |       }
      22 |     };
      23 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:20:9)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      13 |       try {
      14 |         const loadedPrograms = await getAllWorkoutPrograms();
    > 15 |         setPrograms(loadedPrograms);
         |         ^
      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
      18 |         console.error('Error loading programs:', err);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setPrograms (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:15:9)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      18 |         console.error('Error loading programs:', err);
      19 |       } finally {
    > 20 |         setIsLoading(false);
         |         ^
      21 |       }
      22 |     };
      23 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:20:9)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      13 |       try {
      14 |         const loadedPrograms = await getAllWorkoutPrograms();
    > 15 |         setPrograms(loadedPrograms);
         |         ^
      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
      18 |         console.error('Error loading programs:', err);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setPrograms (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:15:9)

  console.error
    Warning: An update to ProgramList inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ProgramList (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.tsx:7:43)
        at section
        at main
        at div
        at App (/workspaces/Excel-workout/src/App.tsx:7:41)

      18 |         console.error('Error loading programs:', err);
      19 |       } finally {
    > 20 |         setIsLoading(false);
         |         ^
      21 |       }
      22 |     };
      23 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at loadPrograms (src/components/ProgramList/ProgramList.tsx:20:9)

FAIL src/App.test.tsx
  App
    ‚úï renders header and both components (17 ms)
    ‚úï shows success message and refreshes program list after successful upload (8 ms)
    ‚úï shows error message when upload fails (1011 ms)
    ‚úï maintains proper section structure and accessibility (17 ms)

  ‚óè App ‚Ä∫ renders header and both components

    TestingLibraryElementError: Unable to find an element with the text: No workout programs found.. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mTrack and manage your workout programs[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"section-title"[39m
              [36m>[39m
                [0mUpload Program[0m
              [36m</h2>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Excel file upload"[39m
                [33mclass[39m=[32m"container"[39m
                [33mrole[39m=[32m"region"[39m
              [36m>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"uploadLabel"[39m
                [36m>[39m
                  [36m<input[39m
                    [33maccept[39m=[32m".xlsx,.xls"[39m
                    [33maria-label[39m=[32m"Choose Excel file"[39m
                    [33mclass[39m=[32m"fileInput"[39m
                    [33mtype[39m=[32m"file"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"uploadButton"[39m
                  [36m>[39m
                    [0mChoose Excel File[0m
                  [36m</span>[39m
                [36m</label>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"helpText"[39m
                [36m>[39m
                  [0mSupported formats: .xlsx, .xls[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</section>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Loading workout programs"[39m
                [33mclass[39m=[32m"loading"[39m
                [33mrole[39m=[32m"status"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"spinner"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"loadingText"[39m
                [36m>[39m
                  [0mLoading programs...[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</section>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      32 |     
      33 |     // Program list section (empty state)
    > 34 |     expect(screen.getByText('No workout programs found.')).toBeInTheDocument();
         |                   ^
      35 |   });
      36 |
      37 |   it('shows success message and refreshes program list after successful upload', async () => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/App.test.tsx:34:19)

  ‚óè App ‚Ä∫ shows success message and refreshes program list after successful upload

    TestingLibraryElementError: Unable to find an element with the text: No workout programs found.. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mTrack and manage your workout programs[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"section-title"[39m
              [36m>[39m
                [0mUpload Program[0m
              [36m</h2>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Excel file upload"[39m
                [33mclass[39m=[32m"container"[39m
                [33mrole[39m=[32m"region"[39m
              [36m>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"uploadLabel"[39m
                [36m>[39m
                  [36m<input[39m
                    [33maccept[39m=[32m".xlsx,.xls"[39m
                    [33maria-label[39m=[32m"Choose Excel file"[39m
                    [33mclass[39m=[32m"fileInput"[39m
                    [33mtype[39m=[32m"file"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"uploadButton"[39m
                  [36m>[39m
                    [0mChoose Excel File[0m
                  [36m</span>[39m
                [36m</label>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"helpText"[39m
                [36m>[39m
                  [0mSupported formats: .xlsx, .xls[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</section>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Loading workout programs"[39m
                [33mclass[39m=[32m"loading"[39m
                [33mrole[39m=[32m"status"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"spinner"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"loadingText"[39m
                [36m>[39m
                  [0mLoading programs...[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</section>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      56 |     
      57 |     // Initially should show empty state
    > 58 |     expect(screen.getByText('No workout programs found.')).toBeInTheDocument();
         |                   ^
      59 |     
      60 |     // Upload file
      61 |     fireEvent.change(input, { target: { files: [file] } });

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/App.test.tsx:58:19)

  ‚óè App ‚Ä∫ shows error message when upload fails

    Unable to find role="status" and name "Failed to parse Excel file"

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mExcel Workout PWA[0m
            [36m</h1>[39m
            [36m<p>[39m
              [0mTrack and manage your workout programs[0m
            [36m</p>[39m
          [36m</header>[39m
          [36m<main[39m
            [33mclass[39m=[32m"App-main"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<h2[39m
                [33mclass[39m=[32m"section-title"[39m
              [36m>[39m
                [0mUpload Program[0m
              [36m</h2>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Excel file upload"[39m
                [33mclass[39m=[32m"container"[39m
                [33mrole[39m=[32m"region"[39m
              [36m>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"uploadLabel"[39m
                [36m>[39m
                  [36m<input[39m
                    [33maccept[39m=[32m".xlsx,.xls"[39m
                    [33maria-describedby[39m=[32m"upload-error"[39m
                    [33maria-label[39m=[32m"Choose Excel file"[39m
                    [33mclass[39m=[32m"fileInput"[39m
                    [33mtype[39m=[32m"file"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"uploadButton"[39m
                  [36m>[39m
                    [0mChoose Excel File[0m
                  [36m</span>[39m
                [36m</label>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"helpText"[39m
                [36m>[39m
                  [0mSupported formats: .xlsx, .xls[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33maria-live[39m=[32m"polite"[39m
                [33mclass[39m=[32m"App-message error"[39m
                [33mrole[39m=[32m"status"[39m
              [36m>[39m
                [0mFailed to parse Excel file[0m
              [36m</div>[39m
            [36m</section>[39m
            [36m<section[39m
              [33mclass[39m=[32m"App-section"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"empty"[39m
                [33mrole[39m=[32m"status"[39m
              [36m>[39m
                [36m<p>[39m
                  [0mNo workout programs found.[0m
                [36m</p>[39m
                [36m<p>[39m
                  [0mUpload an Excel file to get started.[0m
                [36m</p>[39m
              [36m</div>[39m
            [36m</section>[39m
          [36m</main>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      88 |     fireEvent.change(input, { target: { files: [file] } });
      89 |     
    > 90 |     await waitFor(() => {
         |                  ^
      91 |       const errorElement = screen.getByRole('status', { name: errorMessage });
      92 |       expect(errorElement).toBeInTheDocument();
      93 |       expect(errorElement).toHaveClass('App-message', 'error');

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:166:27)
      at Object.<anonymous> (src/App.test.tsx:90:18)

  ‚óè App ‚Ä∫ maintains proper section structure and accessibility

    expect(received).toHaveTextContent()

    received value must be a Node.
    Received has value: undefined

      102 |     expect(headings[0]).toHaveTextContent('Excel Workout PWA');
      103 |     expect(headings[1]).toHaveTextContent('Upload Program');
    > 104 |     expect(headings[2]).toHaveTextContent('Your Workout Programs');
          |                         ^
      105 |
      106 |     // Check section landmarks
      107 |     expect(screen.getByRole('banner')).toBeInTheDocument(); // header

      at __EXTERNAL_MATCHER_TRAP__ (node_modules/expect/build/index.js:386:30)
      at Object.toHaveTextContent (node_modules/expect/build/index.js:387:15)
      at Object.<anonymous> (src/App.test.tsx:104:25)

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      56 |     );
      57 |
    > 58 |     render(<ProgramList />);
         |           ^
      59 |     
      60 |     expect(screen.getByLabelText('Loading workout programs')).toBeInTheDocument();
      61 |     expect(screen.getByText('Loading programs...')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ProgramList/ProgramList.test.tsx:58:11)

  console.error
    Error loading programs: Error: Failed to load programs
        at Object.<anonymous> (/workspaces/Excel-workout/src/components/ProgramList/ProgramList.test.tsx:65:19)
        at Promise.then.completed (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:391:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/workspaces/Excel-workout/node_modules/jest-circus/build/utils.js:316:10)
        at _callCircusTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:218:40)
        at _runTest (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:155:3)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:66:9)
        at _runTestsForDescribeBlock (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:60:9)
        at run (/workspaces/Excel-workout/node_modules/jest-circus/build/run.js:25:3)
        at runAndTransformResultsToJestFormat (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
        at jestAdapter (/workspaces/Excel-workout/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
        at runTestInternal (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:389:16)
        at runTest (/workspaces/Excel-workout/node_modules/jest-runner/build/runTest.js:475:34)

      16 |       } catch (err) {
      17 |         setError('Failed to load workout programs. Please try again later.');
    > 18 |         console.error('Error loading programs:', err);
         |                 ^
      19 |       } finally {
      20 |         setIsLoading(false);
      21 |       }

      at loadPrograms (src/components/ProgramList/ProgramList.tsx:18:17)

FAIL src/components/ProgramList/ProgramList.test.tsx
  ProgramList
    ‚úì shows loading state initially (52 ms)
    ‚úì shows error message when loading fails (32 ms)
    ‚úì shows empty state when no programs exist (12 ms)
    ‚úï displays workout programs when they exist (1004 ms)
    ‚úì applies correct accessibility attributes (34 ms)

  ‚óè ProgramList ‚Ä∫ displays workout programs when they exist

    Found multiple elements with the text: 1 workouts

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<span[39m
      [33mclass[39m=[32m"workoutCount"[39m
    [36m>[39m
      [0m1[0m
      [0m workouts[0m
    [36m</span>[39m

    Ignored nodes: comments, script, style
    [36m<span[39m
      [33mclass[39m=[32m"workoutCount"[39m
    [36m>[39m
      [0m1[0m
      [0m workouts[0m
    [36m</span>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Workout Programs"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<h2[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [0mYour Workout Programs[0m
          [36m</h2>[39m
          [36m<ul[39m
            [33mclass[39m=[32m"list"[39m
          [36m>[39m
            [36m<li[39m
              [33mclass[39m=[32m"item"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"programHeader"[39m
              [36m>[39m
                [36m<h3[39m
                  [33mclass[39m=[32m"programName"[39m
                [36m>[39m
                  [0mTest Program 1[0m
                [36m</h3>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"workoutCount"[39m
                [36m>[39m
                  [0m1[0m
                  [0m workouts[0m
                [36m</span>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"programStats"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"stat"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statLabel"[39m
                  [36m>[39m
                    [0mLast workout:[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statValue"[39m
                  [36m>[39m
                    [0m2/22/2025[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"stat"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statLabel"[39m
                  [36m>[39m
                    [0mCompleted:[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statValue"[39m
                  [36m>[39m
                    [0m1[0m
                    [0m sessions[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"View Test Program 1 details"[39m
                [33mclass[39m=[32m"viewButton"[39m
              [36m>[39m
                [0mView Program[0m
              [36m</button>[39m
            [36m</li>[39m
            [36m<li[39m
              [33mclass[39m=[32m"item"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"programHeader"[39m
              [36m>[39m
                [36m<h3[39m
                  [33mclass[39m=[32m"programName"[39m
                [36m>[39m
                  [0mTest Program 2[0m
                [36m</h3>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"workoutCount"[39m
                [36m>[39m
                  [0m1[0m
                  [0m workouts[0m
                [36m</span>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"programStats"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"stat"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statLabel"[39m
                  [36m>[39m
                    [0mLast workout:[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statValue"[39m
                  [36m>[39m
                    [0mNot started[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"stat"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statLabel"[39m
                  [36m>[39m
                    [0mCompleted:[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"statValue"[39m
                  [36m>[39m
                    [0m0[0m
                    [0m sessions[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"View Test Program 2 details"[39m
                [33mclass[39m=[32m"viewButton"[39m
              [36m>[39m
                [0mView Program[0m
              [36m</button>[39m
            [36m</li>[39m
          [36m</ul>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      89 |     render(<ProgramList />);
      90 |     
    > 91 |     await waitFor(() => {
         |                  ^
      92 |       // Check program names are displayed
      93 |       expect(screen.getByText('Test Program 1')).toBeInTheDocument();
      94 |       expect(screen.getByText('Test Program 2')).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:166:27)
      at Object.<anonymous> (src/components/ProgramList/ProgramList.test.tsx:91:18)

  console.error
    Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      18 |
      19 |   it('renders upload button and help text', () => {
    > 20 |     render(<ExcelUploader />);
         |           ^
      21 |     
      22 |     expect(screen.getByLabelText('Choose Excel file')).toBeInTheDocument();
      23 |     expect(screen.getByText('Choose Excel File')).toBeInTheDocument();

      at printWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:71:30)
      at error (node_modules/react-dom/cjs/react-dom-test-utils.development.js:45:7)
      at actWithWarning (node_modules/react-dom/cjs/react-dom-test-utils.development.js:1736:7)
      at node_modules/@testing-library/react/dist/act-compat.js:63:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:159:26)
      at render (node_modules/@testing-library/react/dist/pure.js:246:10)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:20:11)

  console.error
    Warning: An update to ExcelUploader inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
        at ExcelUploader (/workspaces/Excel-workout/src/components/ExcelUploader/ExcelUploader.tsx:11:3)

      43 |       onUploadError?.(err instanceof Error ? err : new Error(message));
      44 |     } finally {
    > 45 |       setIsLoading(false);
         |       ^
      46 |     }
      47 |   }, [onUploadSuccess, onUploadError]);
      48 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at setIsLoading (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at src/components/ExcelUploader/ExcelUploader.tsx:45:7

FAIL src/components/ExcelUploader/ExcelUploader.test.tsx
  ExcelUploader
    ‚úì renders upload button and help text (11 ms)
    ‚úì shows loading state while processing (210 ms)
    ‚úì handles successful file upload (14 ms)
    ‚úï handles invalid file type (7 ms)
    ‚úï handles parsing errors (32 ms)
    ‚úì clears the input after successful upload (8 ms)

  ‚óè ExcelUploader ‚Ä∫ handles invalid file type

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      79 |     render(<ExcelUploader />);
      80 |     
    > 81 |     const input2 = screen.getByLabelText('Choose Excel file');
         |                           ^
      82 |     fireEvent.change(input2, { target: { files: [file] } });
      83 |     
      84 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:81:27)

  ‚óè ExcelUploader ‚Ä∫ handles parsing errors

    TestingLibraryElementError: Found multiple elements with the text of: Choose Excel file

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-describedby[39m=[32m"upload-error"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    Ignored nodes: comments, script, style
    [36m<input[39m
      [33maccept[39m=[32m".xlsx,.xls"[39m
      [33maria-label[39m=[32m"Choose Excel file"[39m
      [33mclass[39m=[32m"fileInput"[39m
      [33mtype[39m=[32m"file"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-describedby[39m=[32m"upload-error"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
      [36m<div>[39m
        [36m<div[39m
          [33maria-label[39m=[32m"Excel file upload"[39m
          [33mclass[39m=[32m"container"[39m
          [33mrole[39m=[32m"region"[39m
        [36m>[39m
          [36m<label[39m
            [33mclass[39m=[32m"uploadLabel"[39m
          [36m>[39m
            [36m<input[39m
              [33maccept[39m=[32m".xlsx,.xls"[39m
              [33maria-label[39m=[32m"Choose Excel file"[39m
              [33mclass[39m=[32m"fileInput"[39m
              [33mtype[39m=[32m"file"[39m
            [36m/>[39m
            [36m<span[39m
              [33mclass[39m=[32m"uploadButton"[39m
            [36m>[39m
              [0mChoose Excel File[0m
            [36m</span>[39m
          [36m</label>[39m
          [36m<div[39m
            [33mclass[39m=[32m"helpText"[39m
          [36m>[39m
            [0mSupported formats: .xlsx, .xls[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      109 |     render(<ExcelUploader />);
      110 |     
    > 111 |     const input2 = screen.getByLabelText('Choose Excel file');
          |                           ^
      112 |     fireEvent.change(input2, { target: { files: [file] } });
      113 |     
      114 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByLabelText (node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ExcelUploader/ExcelUploader.test.tsx:111:27)

  console.error
    Error parsing Excel file: Error: No data found in the Excel file (or file is too short).
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:20:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:49:9)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:49:9)

  console.warn
    Row 4 is missing an exercise name and might be skipped.

      116 |
      117 |       if (!exercise.name) {
    > 118 |           console.warn(`Row ${rowIndex + 3} is missing an exercise name and might be skipped.`); // +3 because of skipping first two rows
          |                   ^
      119 |       }
      120 |       return exercise as Exercise;
      121 |     }).filter(exercise => exercise.name !== undefined) as Exercise[];

      at map (src/features/excelParsing/excelParser.ts:118:19)
          at Array.map (<anonymous>)
      at parseExcelFile (src/features/excelParsing/excelParser.ts:81:44)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:182:20)

  console.error
    Error parsing Excel file: Error: Missing header row in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:33:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:225:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:225:7)

  console.error
    Error parsing Excel file: Error: Missing required 'Exercise' column in the Excel file.
        at parseExcelFile (/workspaces/Excel-workout/src/features/excelParsing/excelParser.ts:77:13)
        at Object.<anonymous> (/workspaces/Excel-workout/src/features/excelParsing/excelParser.test.ts:283:7)

      164 |
      165 |   } catch (error: any) {
    > 166 |     console.error("Error parsing Excel file:", error);
          |             ^
      167 |     throw new Error(`Error parsing Excel file: ${error.message || error}`);
      168 |   }
      169 | }

      at parseExcelFile (src/features/excelParsing/excelParser.ts:166:13)
      at Object.<anonymous> (src/features/excelParsing/excelParser.test.ts:283:7)

PASS src/features/excelParsing/excelParser.test.ts
  parseExcelFile
    ‚úì should throw an error if the file is empty (19 ms)
    ‚úì should parse a valid Excel file and return workout data (1 ms)
    ‚úì should handle dynamic header mapping correctly (1 ms)
    ‚úì should correctly extract workout day (1 ms)
    ‚úì should handle missing exercise names (2 ms)
    ‚úì should handle invalid number values for sets and load (1 ms)
    ‚úì should throw an error for missing header row (1 ms)
    ‚úì should handle different week formats (1 ms)
    ‚úì should handle mixed-case headers (1 ms)
    ‚úì should throw an error if "Exercise" header is misspelled (2 ms)

Test Suites: 3 failed, 1 passed, 4 total
Tests:       7 failed, 18 passed, 25 total
Snapshots:   0 total
Time:        3.213 s, estimated 8 s
Ran all test suites related to changed files.

